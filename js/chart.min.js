/* Tiny chart utility: draws a simple sparkline/line chart into a div using canvas */
function drawMiniLineChart(containerId, data = [10, 20, 15, 30, 25, 35]) {
	const container = document.getElementById(containerId);
	if (!container) return;
	if (container.querySelector('canvas')) return;
	const canvas = document.createElement('canvas');
	const dpr = window.devicePixelRatio || 1;
	const w = container.clientWidth || 300;
	const h = 120;
	canvas.width = w * dpr;
	canvas.height = h * dpr;
	canvas.style.width = w + 'px';
	canvas.style.height = h + 'px';
	container.appendChild(canvas);
	const ctx = canvas.getContext('2d');
	ctx.scale(dpr, dpr);
	// background
	ctx.fillStyle = 'transparent';
	ctx.clearRect(0, 0, w, h);
	// compute points
	const padding = 20;
	const usableW = w - padding * 2;
	const usableH = h - padding * 2;
	const max = Math.max(...data);
	const min = Math.min(...data);
	ctx.beginPath();
	data.forEach((v, i) => {
		const x = padding + (i / (data.length - 1)) * usableW;
		const y = padding + usableH - ((v - min) / (max - min || 1)) * usableH;
		if (i === 0) ctx.moveTo(x, y); else ctx.lineTo(x, y);
	});
	ctx.strokeStyle = '#7c3aed';
	ctx.lineWidth = 2;
	ctx.stroke();
	// fill under curve
	ctx.lineTo(padding + usableW, padding + usableH);
	ctx.lineTo(padding, padding + usableH);
	ctx.closePath();
	ctx.fillStyle = 'rgba(124,58,237,0.08)';
	ctx.fill();
}
