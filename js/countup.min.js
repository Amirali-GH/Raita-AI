/* Minimal CountUp replacement (lightweight) */
class MiniCountUp {
  constructor(el, endVal, opts = {}) {
    this.el = el;
    this.endVal = Number(endVal)||0;
    this.duration = opts.duration || 1.2;
    this.startVal = 0;
    this.frameVal = this.startVal;
    this.startTime = null;
  }
  easeOutQuad(t){ return t*(2-t); }
  format(n){ return Math.round(n).toLocaleString(); }
  animate(timestamp){
    if(!this.startTime) this.startTime = timestamp;
    const progress = Math.min((timestamp - this.startTime) / (this.duration*1000), 1);
    const eased = this.easeOutQuad(progress);
    this.frameVal = this.startVal + (this.endVal - this.startVal) * eased;
    this.el.textContent = this.format(this.frameVal);
    if(progress < 1){
      requestAnimationFrame(this.animate.bind(this));
    }
  }
  start(){ requestAnimationFrame(this.animate.bind(this)); }
}
window.MiniCountUp = MiniCountUp;
