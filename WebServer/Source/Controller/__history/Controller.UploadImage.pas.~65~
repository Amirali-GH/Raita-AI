Unit Controller.UploadImage;

Interface

Uses
    System.SysUtils,
    System.JSON,
    MVCFramework,
    MVCFramework.Commons,
    Service.Interfaces,
    Web.ReqFiles,
    WebModule.SalamtCRM;

Type
    [MVCPath(BASE_API_V1+'/images')]
    TUploadImageController = Class(TMVCController)
    Public
        [MVCPath('/upload')]
        [MVCHTTPMethods([httpPost])]
        Procedure UploadImages(Const [MVCInject] AImageUploadService: IImageUploadService);

        [MVCPath('/by-branch')]
        [MVCHTTPMethods([httpGet])]
        Procedure GetImagesByBranch(Const [MVCInject] AImageUploadService: IImageUploadService);


        [MVCPath('/($AGUID)')]
        [MVCHTTPMethods([httpGet])]
        [MVCProduces('image/*')]
        Procedure GetImageByGuid(Const AGUID: String);
    End;

Implementation

Uses
    MVCFramework.Logger, System.Classes, IOUtils;

{ TUploadImageController }

//________________________________________________________________________________________
Procedure TUploadImageController.UploadImages(
    Const AImageUploadService: IImageUploadService);
Var
    LFiles: TWebRequestFiles;
    LUserID: String;
Begin
    // دریافت مجموعه فایل‌ها از درخواست
    LFiles := Context.Request.Files As TWebRequestFiles;

    If (LFiles = Nil) Or (LFiles.Count = 0) Then
    Begin
        Raise EMVCException.Create(HTTP_STATUS.NoContent, 'هیچ فایلی ارسال نشده است');
    End;

    // گرفتن شناسه کاربر (مطابق الگوی پروژه شما)
    LUserID := Context.LoggedUser.CustomData.Items['userid'];

    Try
        If Not AImageUploadService.SaveUploadedImages(LFiles, LUserID) Then
            Raise EMVCException.Create(HTTP_STATUS.InternalServerError, 'ذخیره‌سازی تصاویر با مشکل مواجه شد');

        Render(HTTP_STATUS.OK, 'تصاویر با موفقیت ذخیره و تخصیص داده شدند.');
    Except
        On E: EMVCException Do
            Raise;
        On E: Exception Do
            Raise EMVCException.CreateFmt(HTTP_STATUS.InternalServerError,
              'خطا در پردازش تصاویر: %s', [E.Message]);
    End;
End;
//________________________________________________________________________________________
Procedure TUploadImageController.GetImagesByBranch(Const AImageUploadService: IImageUploadService);
Var
    BranchIdStr: String;
    BranchID: Int64;
    Page, PageSize: Integer;
    LJson: TJSONObject;
Begin
    BranchIdStr := Context.Request.QueryStringParam('branchid');
    If (BranchIdStr.IsEmpty) Then
    Begin
        Raise EMVCException.Create(HTTP_STATUS.BadRequest, 'پارامتر branchId ارسال نشده است')
    End
    Else
    Begin
        BranchID := StrToInt64Def(BranchIdStr, -1);
        If (BranchID < 0) Then
        Begin
            Raise EMVCException.Create(HTTP_STATUS.BadRequest, 'branchId معتبر نیست');
        End;
    End;

    Page := StrToIntDef(Context.Request.QueryStringParam('page'), 1);
    PageSize := StrToIntDef(Context.Request.QueryStringParam('pageSize'), 20);
    If Page <= 0 Then Page := 1;
    If PageSize <= 0 Then PageSize := 20;

    LJson := AImageUploadService.GetImagesByBranch(BranchID, Page, PageSize);
    Try
        Context.Response.ContentType := 'application/json; charset=utf-8';
        Render(LJson.ToJSON);
    Finally
        FreeAndNil(LJson);
    End;
End;
//________________________________________________________________________________________
Procedure TUploadImageController.GetImageByGuid(Const AGUID: String);
Var
  ProgramPath, UploadsPath, FoundFile, LGUID: string;
  Files: TArray<string>;
  f: string;
Begin
//  Log.Info('شروع GetImageByGuid برای GUID: ' + AGUID, '');
//
//  If AGUID.IsEmpty Then
//    Raise EMVCException.Create(HTTP_STATUS.BadRequest, 'شناسه تصویر (guid) ارسال نشده است');
//
//  ProgramPath := ExtractFilePath(ParamStr(0));
//  UploadsPath := TPath.Combine(ProgramPath, 'uploads');
//
//  If Not TDirectory.Exists(UploadsPath) Then
//    Raise EMVCException.Create(HTTP_STATUS.NotFound, 'پوشه uploads وجود ندارد');
//
//  FoundFile := '';
//  LGUID := StringReplace(StringReplace(StringReplace(AGUID, '{', '', [rfReplaceAll]), '}', '', [rfReplaceAll]), '-', '', [rfReplaceAll]);
//
//  Files := TDirectory.GetFiles(UploadsPath);
//  For f In Files Do
//  Begin
//    If SameText(TPath.GetFileNameWithoutExtension(f), LGUID) Then
//    Begin
//      FoundFile := f;
//      Break;
//    End;
//  End;
//
//  If FoundFile = '' Then
//    Raise EMVCException.Create(HTTP_STATUS.NotFound, 'تصویر یافت نشد');

  // استفاده از RenderFile به جای FileStream
//  Context.Response.SetCustomHeader('Cache-Control', 'public, max-age=86400');
  RenderFile('/opt/SalamatianCRM/uploads/3490DCEC5098F011B311A7E0A1CBC000.png');
End;
//________________________________________________________________________________________

End.

